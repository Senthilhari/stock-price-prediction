# -*- coding: utf-8 -*-
"""stock price prediction using long short-team memory .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uPu49D94M1L3fQqqNJeGBkO-q3GML9eV
"""

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt

from sklearn.preprocessing import MinMaxScaler

from keras.models import Sequential
from keras.layers import *
from keras.layers import LSTM, Dropout

Tesla=pd.read_csv("Tesla.csv")

Tesla

training=Tesla.iloc[:800,1:2].values
testing=Tesla.iloc[800:,1:2].values

mm_scale=MinMaxScaler(feature_range=(0,1))
training_scaled=mm_scale.fit_transform(training)

x_train=[]
y_train=[]
for i in range(60,800):
  x_train.append(training_scaled[i-60:i,0])
  y_train.append(training_scaled[i,0])
x_train,y_train=np.array(x_train),np.array(y_train)
x_train=np.reshape(x_train,(x_train.shape[0],x_train.shape[1],1))

model= Sequential()
model.add(LSTM(units=50,return_sequences=True,input_shape=(x_train.shape[1],1)))
model.add(Dropout(0.2))
model.add(LSTM(units=50,return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(units=50,return_sequences=True))
model.add(Dropout(0.2))
model.add(LSTM(units=50))
model.add(Dropout(0.2))
model.add(Dense(units=1))

model.compile(optimizer="adam",loss="mean_squared_error")
model.fit(x_train,y_train,epochs=50,batch_size=32)

train_data=Tesla.iloc[:800,1:2]
test_data=Tesla.iloc[800:,1:2]
total_data=pd.concat((train_data,test_data),axis=0)
inputs=total_data[len(total_data)-len(test_data)-60:].values
inputs=inputs.reshape(-1,1)
inputs=mm_scale.transform(inputs)

x_test=[]
for i in range(60,519):
  x_test.append(inputs[i-60:i,0])
x_test=np.array(x_test)
x_test=np.reshape(x_test,(x_test.shape[0],x_test.shape[1],1))

stock_price_predicted=model.predict(x_test)
stock_price_predicted=mm_scale.inverse_transform(stock_price_predicted)

plt.figure(figsize=(12,6))
plt.plot(Tesla.loc[800:,"Date"],test_data.values,color="red",label="Actual price")
plt.plot(Tesla.loc[800:,"Date"],stock_price_predicted,color="blue",label="predicted price")
plt.xticks(np.arange(0,459,50))
plt.title("Tesla stock price predictaion")
plt.xlabel("Time")
plt.ylabel("Stock price")
plt.legend()
plt.show()

